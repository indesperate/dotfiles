let mapleader="\<space>"
nnoremap gd :vsc Edit.GoToDefinition<CR>
nnoremap gD :vsc Edit.GoToDeclaration<CR>
nnoremap gr :vsc Edit.FindAllReferences<CR>
nnoremap gi :vsc Edit.GoToImplementation<CR>
nnoremap <K> :vsc Edit.QuickInfo<CR>
inoremap <c-k> <c-o>:vsc Edit.ParameterInfo<CR>
nnoremap <leader>a :vsc View.QuickActions<CR>
nnoremap gc :vsc Edit.ToggleLineComment<CR>
nnoremap gC :vsc Edit.ToggleBlockComment<CR>
vnoremap gc :vsc Edit.ToggleLineComment<CR>
vnoremap gC :vsc Edit.ToggleBlockComment<CR>
nnoremap <c-i> :vsc View.NavigateForward<CR>
nnoremap <c-o> :vsc View.NavigateBackward<CR>
nnoremap <leader>ff :vsc Edit.GotoFile<CR>
nnoremap <leader>fs :vsc Edit.GotoSymbol<CR>
nnoremap <leader>fg :vsc Edit.GotoText<CR>
nnoremap <leader>r :vsc Refactor.Rename<CR>
nnoremap <leader>= :vsc Edit.FormatDocument<CR>
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l
nnoremap H :vsc Window.NextTab<CR>
nnoremap L :vsc Window.PreviousTab<CR>
nnoremap ]d :vsc View.NextError<CR>
nnoremap [d :vsc View.PreviousError<CR>
nnoremap <leader>n :vsc View.SolutionExplorer<CR>
nnoremap <leader>d :vsc Debug.Start<CR>
set ignorecase
set smartcase
